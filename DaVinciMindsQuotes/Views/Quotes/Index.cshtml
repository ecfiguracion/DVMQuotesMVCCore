@model DaVinciMindsQuotes.Utilities.PaginatedList<DaVinciMindsQuotes.Models.Quotes>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Quotes</h2>

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-group">Find by quote</div>
    <div class="input-group custom-search-form p-4 form-group">
        <input type="text" class="form-control" name="searchString" id="searchString" value="@ViewData["CurrentFilter"]" />
        <span class="input-group-btn">
            <a href="javascript:$('form').submit()" class="btn btn-primary">
                <span class="glyphicon glyphicon-search"></span>
            </a>
            <a asp-action="New" class="btn btn-info">
                <span class="glyphicon glyphicon-plus"></span>
            </a>
        </span>
    </div>
</form>

<table class="table table-striped table-hover table-sm">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Category</a>
            </th>
            <th>Quotation</th>
            <th>Author</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Quotation)</td>
                <td>@Html.DisplayFor(modelItem => item.Author.Name)</td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "Quotes", new { id = item.Id }, null) |
                    @Html.ActionLink("Details", "Detail", "Quotes", new { id = item.Id }, null) |
                    @Html.ActionLink("Delete", "Delete", "Quotes", new { id = item.Id }, null)
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="btn-group">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        <
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        >
    </a>
</div>


